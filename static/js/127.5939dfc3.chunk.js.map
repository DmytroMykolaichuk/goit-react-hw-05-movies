{"version":3,"file":"static/js/127.5939dfc3.chunk.js","mappings":"wPAEaA,E,OAAaC,GAAAA,GAAH,4C,kBCEfC,EAAcC,EAAQ,IAAtBD,UA0DR,EAxDe,WACb,IAAQE,EAAYF,IAAZE,QACR,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA2BC,GAA3B,uFAEIF,EAAU,WAFd,SAGsBG,EAAAA,EAAAA,IAAA,6CACsBD,EADtB,qEAHtB,OAGUE,EAHV,OAMIN,EAAUM,EAAIC,KAAKC,SACnBN,EAAU,aAPd,gDASIO,QAAQC,IAAR,MACAR,EAAU,YAVd,0DADc,uBAAC,SAAD,2BAcdS,CAAYd,EACb,GAAE,CAACA,KAEF,gCACc,cAAXI,GAA4C,IAAlBF,EAAOa,QAChC,4DAEA,SAACnB,EAAD,UACGM,EAAOc,KAAI,YAA0D,IAAvDC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,QAASX,EAAqC,EAArCA,GAAsBY,EAAe,EAAjCC,eAAkBD,OACpD,OACE,yBAEI,iCACE,uBAAIF,KACJ,oCAAYE,GAAkB,qCAC9B,uBAAID,QALDX,EAUZ,MAGO,YAAXH,IACC,SAAC,KAAD,CACEiB,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGD,aAAXvB,IAAyB,6DAG/B,C","sources":["components/Review.styled.js","components/Review.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListReview = styled.ul`\n  padding: 30px 0;\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { ListReview } from './Review.styled';\nimport { Circles } from 'react-loader-spinner';\nconst { useParams } = require('react-router-dom');\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [review, setReview] = useState([]);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    async function fetchReview(id) {\n      try {\n        setStatus('pending');\n        const res = await axios.get(\n          `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=352708f90836dd2b75b209ae082e91df&language=en-US`\n        );\n        setReview(res.data.results);\n        setStatus('responded');\n      } catch (error) {\n        console.log(error);\n        setStatus('rejected');\n      }\n    }\n    fetchReview(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {status === 'responded' && review.length === 0 ? (\n        <h2>There are currently no reviews</h2>\n      ) : (\n        <ListReview>\n          {review.map(({ author, content, id, author_details: { rating } }) => {\n            return (\n              <li key={id}>\n                {\n                  <>\n                    <b>{author}</b>\n                    <p>Rating: {rating ? rating : 'There are currently no ratings'}</p>\n                    <p>{content}</p>\n                  </>\n                }\n              </li>\n            );\n          })}\n        </ListReview>\n      )}\n      {status === 'pending' && (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"#f8a100\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\nexport default Review;\n"],"names":["ListReview","styled","useParams","require","movieId","useState","review","setReview","status","setStatus","useEffect","id","axios","res","data","results","console","log","fetchReview","length","map","author","content","rating","author_details","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}