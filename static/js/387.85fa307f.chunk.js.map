{"version":3,"file":"static/js/387.85fa307f.chunk.js","mappings":"sQAEaA,EAAWC,EAAAA,GAAAA,GAAH,mIAaRC,GALQD,EAAAA,GAAAA,IAAH,wDAKEA,EAAAA,GAAAA,EAAH,iFAKJE,EAAgBF,EAAAA,GAAAA,IAAH,yC,kBChBlBG,EAAcC,EAAQ,IAAtBD,UAmDR,EAjDa,WACX,IAAQE,EAAYF,IAAZE,QACR,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA4BN,GAA5B,uFAEIK,EAAU,WAFd,UAGuBE,EAAAA,EAAAA,IAAeP,GAHtC,OAGUQ,EAHV,OAIIL,EAAQK,GACRH,EAAU,aALd,gDAOIA,EAAU,YAPd,yDADc,yBAAC,SAAD,2BAWdI,CAAaT,EACd,GAAE,CAACA,KAEF,gCACc,cAAXI,IACC,SAACV,EAAD,UACGQ,EAAKQ,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC1C,OACE,yBACE,4BACE,gBACEC,IACEF,EAAY,yCAC0BA,GAClC,mGAENG,MAAM,MACNC,IAAKL,KAEP,UAACf,EAAD,YACE,UAACD,EAAD,WAAOgB,EAAP,QACA,UAAChB,EAAD,eAAQe,YAbLG,EAkBZ,MAGO,YAAXV,IAAwB,SAACc,EAAA,EAAD,IACb,aAAXd,IAAyB,6DAG/B,C,8LCpDDe,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaF,EAAAA,EAAAA,IAAA,mCAAsCC,IADnD,cACCE,EADD,yBAEEA,EAAId,KAAKe,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACaN,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEK,IAFhF,cACCH,EADD,yBAIEA,EAAId,KAAKe,SAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1B,GAAjC,uFACamB,EAAAA,EAAAA,IAAA,gBACPnB,EADO,oBACYoB,EADZ,4CADb,cACCE,EADD,yBAIEA,EAAId,MAJN,kEAOA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA8BP,GAA9B,uFACamB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,oBADb,cACCE,EADD,yBAEEA,EAAId,KAAKN,MAFX,kEAKA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAAgC3B,GAAhC,uFACamB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CoB,EAA9C,oBADb,cACCE,EADD,yBAEEA,EAAId,KAAKe,SAFX,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","service/appi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ListCast = styled.ul`\n  padding: 30px 0;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n`;\nexport const Actor = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Name = styled.p`\n  text-align: center;\n  padding: 5px 0;\n  margin: 0;\n`;\nexport const ContainerName = styled.div`\n  width: 200px;\n`;\n","import { fetchCastMovie } from 'service/appi';\nimport { useEffect, useState } from 'react';\nimport { ListCast, Name, ContainerName } from './Cast.styled';\nimport { Loader } from 'components/Loader';\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    async function getCastMovie(movieId) {\n      try {\n        setStatus('pending');\n        const data = await fetchCastMovie(movieId);\n        setCast(data);\n        setStatus('responded');\n      } catch {\n        setStatus('rejected');\n      }\n    }\n    getCastMovie(movieId);\n  }, [movieId]);\n  return (\n    <>\n      {status === 'responded' && (\n        <ListCast>\n          {cast.map(({ character, name, profile_path, cast_id }) => {\n            return (\n              <li key={cast_id}>\n                <div>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                        : 'https://kartinkin.net/uploads/posts/2022-03/1647018833_14-kartinkin-net-p-anonim-kartinki-20.jpg'\n                    }\n                    width=\"200\"\n                    alt={name}\n                  />\n                  <ContainerName>\n                    <Name>{name} </Name>\n                    <Name> {character}</Name>\n                  </ContainerName>\n                </div>\n              </li>\n            );\n          })}\n        </ListCast>\n      )}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\nexport async function fetchTrendMovies() {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data.results;\n}\n\nexport async function fetchQueryMovies(query) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data.results;\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n  return res.data;\n}\n\nexport async function fetchCastMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return res.data.cast;\n}\n\nexport async function fetchReviewMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return res.data.results;\n}\n"],"names":["ListCast","styled","Name","ContainerName","useParams","require","movieId","useState","cast","setCast","status","setStatus","useEffect","fetchCastMovie","data","getCastMovie","map","character","name","profile_path","cast_id","src","width","alt","Loader","axios","API_KEY","fetchTrendMovies","res","results","fetchQueryMovies","query","fetchDetailsMovie","fetchReviewMovie"],"sourceRoot":""}