{"version":3,"file":"static/js/37.6b8d9306.chunk.js","mappings":"mMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGG,EAAMM,OAASN,EAAMO,QAFjBP,EAAMG,GADA,KAStB,C,yJCfYK,EAAQC,EAAAA,GAAAA,MAAH,uIAOLC,EAASD,EAAAA,GAAAA,OAAH,4P,2BCwCnB,EA1Ce,WACb,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,iBAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KAHmB,wCAmBnB,WAA8BC,GAA9B,uFAEIJ,EAAU,WAFd,UAGuBK,EAAAA,EAAAA,IAAiBD,GAHxC,OAGUE,EAHV,OAIIR,EAAUQ,GACVN,EAAU,aALd,gDAOIA,EAAU,YAPd,0DAnBmB,sBA8BnB,OAzBAO,EAAAA,EAAAA,YAAU,WACR,IAAMH,EAAQF,EAAaM,IAAI,SAC3BJ,GAPa,oCAQfK,CAAeL,EAElB,GAAE,CAACF,KAqBF,iCACE,kBAAMQ,SApBV,SAAkBC,GAChBA,EAAEC,iBACF,IAAQC,EAAUF,EAAEG,OAAOV,MAAnBS,MACFT,EAAQS,EAAME,OAAS,CAAEX,MAAOS,GAAU,CAAC,EACjDV,EAAgBC,EACjB,EAeG,WACE,SAACV,EAAD,CAAOsB,KAAK,OAAOvB,KAAK,QAAQwB,YAAY,eAC5C,SAACrB,EAAD,CAAQoB,KAAK,SAAb,mBAEU,cAAXjB,IAA0B,SAAClB,EAAA,EAAD,CAAYC,OAAQA,IACnC,YAAXiB,IAAwB,SAACmB,EAAA,EAAD,IACb,aAAXnB,IAAyB,6DAG/B,C,8LC9CDoB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaF,EAAAA,EAAAA,IAAA,mCAAsCC,IADnD,cACCE,EADD,yBAEEA,EAAIhB,KAAKiB,SAFX,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,uFACae,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEhB,IAFhF,cACCkB,EADD,yBAIEA,EAAIhB,KAAKiB,SAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACaN,EAAAA,EAAAA,IAAA,gBACPM,EADO,oBACYL,EADZ,4CADb,cACCE,EADD,yBAIEA,EAAIhB,MAJN,kEAOA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACaN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAA8CL,EAA9C,oBADb,cACCE,EADD,yBAEEA,EAAIhB,KAAKqB,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACaN,EAAAA,EAAAA,IAAA,gBAAmBM,EAAnB,4BAA8CL,EAA9C,oBADb,cACCE,EADD,yBAEEA,EAAIhB,KAAKiB,SAFX,kE","sources":["components/MoviesList.jsx","components/Movies.styled.js","pages/Movies.jsx","service/appi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 320px;\n  font-size: 24px;\n  margin: 0 40px;\n  border: thick double orange;\n  padding-left: 20px;\n`;\nexport const Button = styled.button`\n  font-size: 24px;\n  padding: 0 10px;\n  background-color: transparent;\n  border: thick double orange;\n  cursor: pointer;\n  transition: transform 250ms linear;\n  outline: none;\n  :hover {\n    transform: scale(1.1);\n  }\n`;\n","import { fetchQueryMovies } from 'service/appi';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input, Button } from 'components/Movies.styled';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      getQueryMovies(query);\n    }\n  }, [searchParams]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const { value } = e.target.query;\n    const query = value.trim() ? { query: value } : {};\n    setSearchParams(query);\n  }\n\n  async function getQueryMovies(query) {\n    try {\n      setStatus('pending');\n      const data = await fetchQueryMovies(query);\n      setMovies(data);\n      setStatus('responded');\n    } catch {\n      setStatus('rejected');\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search...\" />\n        <Button type=\"submit\">Go</Button>\n      </form>\n      {status === 'responded' && <MoviesList movies={movies} />}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\nexport async function fetchTrendMovies() {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data.results;\n}\n\nexport async function fetchQueryMovies(query) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data.results;\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n  return res.data;\n}\n\nexport async function fetchCastMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return res.data.cast;\n}\n\nexport async function fetchReviewMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return res.data.results;\n}\n"],"names":["MoviesList","movies","location","useLocation","map","movie","Link","to","id","state","from","title","name","Input","styled","Button","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","fetchQueryMovies","data","useEffect","get","getQueryMovies","onSubmit","e","preventDefault","value","target","trim","type","placeholder","Loader","axios","API_KEY","fetchTrendMovies","res","results","fetchDetailsMovie","movieId","fetchCastMovie","cast","fetchReviewMovie"],"sourceRoot":""}