{"version":3,"file":"static/js/415.9726d427.chunk.js","mappings":"oMAIaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,SACGG,EAAMM,OAASN,EAAMO,QAFjBP,EAAMG,GADA,KAStB,C,iHCgBD,UA5Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,QAArC,eAAOE,EAAP,KAAeC,EAAf,KAFiB,wCAOjB,oGAEIA,EAAU,WAFd,UAGuBC,EAAAA,EAAAA,MAHvB,OAGUC,EAHV,OAIIJ,EAAUI,GACVF,EAAU,aALd,gDAOIA,EAAU,YAPd,0DAPiB,sBAkBjB,OAfAG,EAAAA,EAAAA,YAAU,YAHO,mCAIfC,EACD,GAAE,KAcD,iCACE,2CACY,cAAXL,IAA0B,SAAC,IAAD,CAAYd,OAAQA,IACnC,YAAXc,IAAwB,SAAC,IAAD,IACb,aAAXA,IAAyB,6DAG/B,C,8LC7BDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,oGACaI,EAAAA,EAAAA,IAAA,mCAAsCC,IADnD,cACCC,EADD,yBAEEA,EAAIL,KAAKM,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACaL,EAAAA,EAAAA,IAAA,+BACQC,EADR,4DACmEI,IAFhF,cACCH,EADD,yBAIEA,EAAIL,KAAKM,SAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACaP,EAAAA,EAAAA,IAAA,gBACPO,EADO,oBACYN,EADZ,4CADb,cACCC,EADD,yBAIEA,EAAIL,MAJN,kEAOA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACaP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADb,cACCC,EADD,yBAEEA,EAAIL,KAAKY,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACaP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAA8CN,EAA9C,oBADb,cACCC,EADD,yBAEEA,EAAIL,KAAKM,SAFX,kE","sources":["components/MoviesList.jsx","pages/Home.jsx","service/appi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { fetchTrendMovies } from 'service/appi';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader';\nimport { MoviesList } from 'components/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    getTrendMovies();\n  }, []);\n\n  async function getTrendMovies() {\n    try {\n      setStatus('pending');\n      const data = await fetchTrendMovies();\n      setMovies(data);\n      setStatus('responded');\n    } catch {\n      setStatus('rejected');\n    }\n  }\n\n  return (\n    <>\n      <h1>Trending Today</h1>\n      {status === 'responded' && <MoviesList movies={movies} />}\n      {status === 'pending' && <Loader />}\n      {status === 'rejected' && <h2>Sorry we didn't find this page</h2>}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '352708f90836dd2b75b209ae082e91df';\n\nexport async function fetchTrendMovies() {\n  const res = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return res.data.results;\n}\n\nexport async function fetchQueryMovies(query) {\n  const res = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return res.data.results;\n}\n\nexport async function fetchDetailsMovie(movieId) {\n  const res = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US&external_source=imdb_id`\n  );\n  return res.data;\n}\n\nexport async function fetchCastMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n  return res.data.cast;\n}\n\nexport async function fetchReviewMovie(movieId) {\n  const res = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n  return res.data.results;\n}\n"],"names":["MoviesList","movies","location","useLocation","map","movie","Link","to","id","state","from","title","name","useState","setMovies","status","setStatus","fetchTrendMovies","data","useEffect","getTrendMovies","axios","API_KEY","res","results","fetchQueryMovies","query","fetchDetailsMovie","movieId","fetchCastMovie","cast","fetchReviewMovie"],"sourceRoot":""}